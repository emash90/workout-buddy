
services:
  postgres:
    image: postgres:15-alpine
    container_name: workout-buddy-postgres
    restart: always
    environment:
      POSTGRES_DB: workout_buddy_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d workout_buddy_dev"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - workout-buddy-network

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile.dev
    container_name: workout-buddy-ai
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./ai-service/src:/app/src
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/workout_buddy_dev
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      SERPER_API_KEY: ${SERPER_API_KEY:-}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      ENVIRONMENT: development
      HOST: 0.0.0.0
      PORT: 8000
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - workout-buddy-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: workout-buddy-backend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/tsconfig.build.json:/app/tsconfig.build.json
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: workout_buddy_dev
      AI_SERVICE_URL: http://ai-service:8000
    depends_on:
      postgres:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - workout-buddy-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: workout-buddy-client
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
      - ./client/index.html:/app/index.html
      - ./client/vite.config.ts:/app/vite.config.ts
      - ./client/tailwind.config.js:/app/tailwind.config.js
      - ./client/postcss.config.js:/app/postcss.config.js
      - ./client/tsconfig.json:/app/tsconfig.json
      - ./client/tsconfig.app.json:/app/tsconfig.app.json
      - ./client/.env:/app/.env
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - backend
    networks:
      - workout-buddy-network

  adminer:
    image: adminer
    container_name: workout-buddy-adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - workout-buddy-network

volumes:
  postgres_data:

networks:
  workout-buddy-network:
    driver: bridge